name: Build and Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  BuildAndTest:
    runs-on: windows-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v3
    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Add coverlet collector
      run: dotnet add Test/Test.csproj package coverlet.collector
    - name: Test
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" /p:CoverletOutputFormat=cobertura ./Test/Test.csproj
    - name: Codecov
      uses: codecov/codecov-action@v2
      with:
        verbose: true
        files: Test/TestResults/*/coverage.cobertura.xml

  WindowsDockerTests:
    runs-on: windows-latest
    timeout-minutes: 90
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore CMD/CMD.csproj
    - name: Build CMD
      run: dotnet build --no-restore /p:Platform=x64 --configuration Release CMD/CMD.csproj
    - name: Copy to InstalledFiles
      run: mkdir -p ./InstalledFiles && cp -r CMD/bin/Release/net6.0/. ./InstalledFiles/.
    - name: Build Windows docker image
      run: docker build -f Dockerfile_WindowsInstaller -t smithchemwisc/metamorpheus:windowsinstaller .
    - name: Run Windows docker test
      run: docker run --rm -v CMD/bin/x64/Release/net6.0/Data:C:\Output smithchemwisc/metamorpheus:windowsinstaller --test -o C:\Output\DockerMicrovignetteOutput -v minimal

  LinuxDockerTests:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore CMD/CMD.csproj
    - name: Build CMD
      run: dotnet build --no-restore /p:Platform=x64 --configuration Release CMD/CMD.csproj; ls -lra CMD/
    - name: Build Linux docker image
      run: docker build -t smithchemwisc/metamorpheus:dev .
    - name: Run Linux docker Test
      run: docker run --rm -v CMD/bin/x64/Release/net6.0/Data:/mnt/data smithchemwisc/metamorpheus:dev --test -o ./mnt/data/DockerMicrovignetteOutput -v minimal
